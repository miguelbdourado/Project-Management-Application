package pt.isel.daw.view.problem

import com.fasterxml.jackson.databind.PropertyNamingStrategy
import com.fasterxml.jackson.databind.annotation.JsonNaming
import javax.servlet.http.HttpServletResponse
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity


@JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy::class)
data class Problem(
    val type: String?,      // A URI reference that identifies the problem type.
    val title: String?,     // A short, human-readable summary of the problem type.
    val status: Int?,       // The HTTP status code generated by the origin server for this occurrence of the problem.
    val detail: String?,    // A human-readable explanation specific to this occurrence of the problem.
    val instance: String?,  // A URI reference that identifies the specific occurrence of the problem.
)

fun notFound(title: String?, detail: String?, instance: String? = null): ResponseEntity<Any> {
    return problemResponse(
        type = "about:blank",
        title = title,
        status = HttpServletResponse.SC_NOT_FOUND,
        detail = detail,
        instance = instance
    )
}

fun problem(
    type: String? = null,
    title: String? = null,
    status: Int? = null,
    detail: String? = null,
    instance: String? = null
): Problem {
    return Problem(type, title, status, detail, instance)
}

fun problemResponse(
    type: String? = null,
    title: String? = null,
    status: Int = 500,
    detail: String? = null,
    instance: String? = null
): ResponseEntity<Any> {
    return ResponseEntity
        .status(status)
        .contentType(MediaType.APPLICATION_PROBLEM_JSON)
        .body(problem(type, title, status, detail, instance))
}
